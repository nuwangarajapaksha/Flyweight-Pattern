/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.formdev.flatlaf.IntelliJTheme;
import java.awt.Color;
import javax.swing.UIManager;
import model.PenFactory;
import model.RefillablePen;

/**
 *
 * @author NUWAA
 */
public class RefillPen extends javax.swing.JFrame {

    private static final String colors[] = {"Red", "Black", "Green"};

    /**
     * Creates new form RefillPen
     */
    public RefillPen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        createPenButton = new javax.swing.JButton();
        colorComboBox = new javax.swing.JComboBox<>();
        writeButton = new javax.swing.JButton();
        writingAreaLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Refillable Pen");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        createPenButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        createPenButton.setText("Create Pen");
        createPenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPenButtonActionPerformed(evt);
            }
        });

        colorComboBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        colorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Red", "Black", "Green" }));

        writeButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        writeButton.setText("Write");
        writeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeButtonActionPerformed(evt);
            }
        });

        writingAreaLabel.setBackground(new java.awt.Color(255, 255, 255));
        writingAreaLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        writingAreaLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        writingAreaLabel.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(writingAreaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createPenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(colorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(writeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(createPenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(colorComboBox)
                    .addComponent(writeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(writingAreaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void createPenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPenButtonActionPerformed
        // TODO add your handling code here:
        RefillablePen refillablePen = (RefillablePen) PenFactory.getPen("refillablePen");
        String write = refillablePen.write();
        writingAreaLabel.setText(write);
    }//GEN-LAST:event_createPenButtonActionPerformed

    private void writeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeButtonActionPerformed
        // TODO add your handling code here:
        String color = colorComboBox.getSelectedItem().toString();
        if (color.equalsIgnoreCase("red")) {
            RefillablePen refillablePen = (RefillablePen) PenFactory.getPen("refillablePen");
            refillablePen.setColor(new Color(255, 0, 0));
            String write = refillablePen.write();
            writingAreaLabel.setForeground(refillablePen.getColor());
            writingAreaLabel.setText(write);
        } else if (color.equalsIgnoreCase("black")) {
            RefillablePen refillablePen = (RefillablePen) PenFactory.getPen("refillablePen");
            refillablePen.setColor(new Color(0, 0, 0));
            String write = refillablePen.write();
            writingAreaLabel.setForeground(refillablePen.getColor());
            writingAreaLabel.setText(write);
        } else if (color.equalsIgnoreCase("green")) {
            RefillablePen refillablePen = (RefillablePen) PenFactory.getPen("refillablePen");
            refillablePen.setColor(new Color(0, 128, 0));
            String write = refillablePen.write();
            writingAreaLabel.setForeground(refillablePen.getColor());
            writingAreaLabel.setText(write);
        }
    }//GEN-LAST:event_writeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RefillPen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RefillPen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RefillPen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RefillPen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }

        try {
//            UIManager.setLookAndFeel(new FlatLightLaf());
            IntelliJTheme.setup(RefillPen.class.getResourceAsStream(
                    "/resources/themes/arc-theme.theme.json"));
            UIManager.put("Table.showHorizontalLines", true);
            UIManager.put("Table.showVerticalLines", true);
            UIManager.put("ScrollBar.showButtons", true);
            UIManager.put("ScrollBar.width", 16);
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RefillPen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> colorComboBox;
    private javax.swing.JButton createPenButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton writeButton;
    private javax.swing.JLabel writingAreaLabel;
    // End of variables declaration//GEN-END:variables
}
